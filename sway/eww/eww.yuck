;; EWW Configuration - Migrated from Waybar
;; Copyright (C) 2020-2024 Aditya Shakya <adi1090x@gmail.com>

;; Variables
(defvar eww "eww -c ~/.config/sway/eww")

;; Workspaces widget
(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly false
       :halign "start"
    (for workspace in workspaces_data
      (button :class "workspace ${workspace.focused ? 'focused' : workspace.visible ? 'visible' : workspace.urgent ? 'urgent' : 'inactive'}"
              :onclick "swaymsg workspace ${workspace.num}"
        (label :text "${workspace.icon}")))))

(deflisten workspaces_data :initial "[]"
  "~/.config/sway/eww/scripts/workspaces")

;; Window title widget
(defwidget window []
  (box :class "window"
       :orientation "h"
    (label :text "${window_title}" 
           :limit-width 50)))

(defpoll window_title :interval "1s"
  "~/.config/sway/eww/scripts/window")

;; Clock widget  
(defwidget clock []
  (box :class "clock"
       :orientation "h"
    (button :onclick "~/.config/sway/eww/scripts/calendar"
      (label :text "${time}"))))

(defpoll time :interval "1s"
  "date '+%H:%M'")

;; Battery widget
(defwidget battery []
  (box :class "battery ${battery_status}"
       :orientation "h"
       :visible {battery_capacity != ""}
    (button :onclick ""
      (label :text "${battery_icon} ${battery_capacity}%"))))

(defpoll battery_capacity :interval "10s"
  "~/.config/sway/eww/scripts/battery --capacity")

(defpoll battery_status :interval "10s"
  "~/.config/sway/eww/scripts/battery --status")

(defpoll battery_icon :interval "10s"
  "~/.config/sway/eww/scripts/battery --icon")

;; Network widget
(defwidget network []
  (box :class "network ${network_class}"
       :orientation "h"
    (button :onclick "~/.config/sway/scripts/rofi_network"
      (label :text "${network_icon} ${network_name}"))))

(defpoll network_name :interval "5s"
  "~/.config/sway/eww/scripts/network --name")

(defpoll network_icon :interval "5s"
  "~/.config/sway/eww/scripts/network --icon")

(defpoll network_class :interval "5s"
  "~/.config/sway/eww/scripts/network --class")

;; Pulseaudio widget
(defwidget pulseaudio []
  (box :class "pulseaudio ${audio_class}"
       :orientation "h"
    (eventbox :onscroll "~/.config/sway/eww/scripts/audio --scroll {}"
              :onclick "pulsemixer --toggle-mute"
      (label :text "${audio_icon} ${audio_volume}%"))))

(defpoll audio_volume :interval "1s"
  "~/.config/sway/eww/scripts/audio --volume")

(defpoll audio_icon :interval "1s"
  "~/.config/sway/eww/scripts/audio --icon")

(defpoll audio_class :interval "1s"
  "~/.config/sway/eww/scripts/audio --class")

;; Backlight widget
(defwidget backlight []
  (box :class "backlight"
       :orientation "h"
    (eventbox :onscroll "~/.config/sway/eww/scripts/brightness --scroll {}"
      (label :text "${backlight_icon} ${backlight_level}%"))))

(defpoll backlight_level :interval "2s"
  "~/.config/sway/eww/scripts/brightness --level")

(defpoll backlight_icon :interval "2s"
  "~/.config/sway/eww/scripts/brightness --icon")

;; Idle inhibitor widget
(defwidget idle_inhibitor []
  (box :class "idle_inhibitor ${idle_class}"
       :orientation "h"
    (button :onclick "~/.config/sway/eww/scripts/idle --toggle"
      (label :text "${idle_icon}"))))

(defpoll idle_icon :interval "2s"
  "~/.config/sway/eww/scripts/idle --icon")

(defpoll idle_class :interval "2s"
  "~/.config/sway/eww/scripts/idle --class")

;; Custom themes widget
(defwidget themes []
  (box :class "themes"
       :orientation "h"
    (button :onclick "$HOME/.config/sway/theme/theme.sh --pywal"
            :onrightclick "$HOME/.config/sway/theme/theme.sh --default"
      (label :text ""))))

;; Tray widget placeholder (EWW doesn't have native system tray support)
(defwidget tray []
  (box :class "tray"
       :orientation "h"
    (label :text "")))

;; Main bar widget
(defwidget bar []
  (centerbox :orientation "h"
             :class "bar"
    (box :class "left"
         :orientation "h"
         :space-evenly false
         :halign "start"
      (workspaces)
      (window))
    (box :class "center"
         :orientation "h"
         :space-evenly false
         :halign "center")
    (box :class "right"
         :orientation "h"
         :space-evenly false
         :halign "end"
      (themes)
      (idle_inhibitor)
      (pulseaudio)
      (backlight)
      (network)
      (battery)
      (clock)
      (tray))))

;; Window definition
(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "32px"
                      :anchor "top center")
  :stacking "fg"
  :exclusive true
  (bar))